그래프 탐색 알고리즘 : DFS / BFS
탐색(Search)이란, 많은 양의 데이터 중에서 원하는 데이터를 찾는 과정
-> 대표적인 그래프 탐색 알고리즘: DFS / BFS

[사전 개념]
1. 스택 자료구조
 - 먼저 들어온 데이터가 나중에 나가는 형식(선입후출)의 자료구조
 - 입구와 출구가 동일한 형태

2. 큐 자료구조
 - 먼저 들어 온 데이터가 먼저 나가는 형식(선입선출)의 자료구조
 - 입구와 출구가 모두 뚫려 있는 터널과 같은 형태

3. 재귀함수(Recursive Function)
 - 자기 자신을 다시 호출하는 함수
 - 재귀 함수 사용 시 재귀 함수의 종료 조건을 반드시 명시
 - 종료 조건을 제대로 명시하지 않으면, 함수가 무한히 호출될 수 있음
 - 모든 재귀함수는 반복문을 이용해 동일한 기능을 구현할 수 있음
 - 재귀 함수가 반복문 보다 유리할 수도, 불리할 수도 있음
 - 컴퓨터가 함수를 연속적으로 호출하면, 컴퓨터 메모리 내부의 스택 프레임에 쌓임
 -> 스택 사용 시, 구현상 스택 라이브러리 대신 재귀 함수를 이용하는 경우가 많음.

[그래프 탐색 알고리즘]
1. DFS(Depth-First Search)
 - 깊이 우선 탐색 -> 그래프에서 깊은 부분을 우선적으로 탐색하는 알고리즘
(1) DFS: 스택 자료구조(혹은 재귀 함수) 이용
 1) 탐색 시작 노드를 스택에 삽입하고 방문 처리
 2) 스택의 최상단 노드에 방문하지 않은 인접한 노드가 하나라도 있으면, 그 노드를 스택에 넣고 방문 처리.
    방문하지 않은 인접 노드가 없으면 스택에서 최상단 노드를 꺼냄
    -> 매번, 최상단 노드를 기준으로, 방문하지 않은 인접 노드가 있으면 그 인접 노드로도 방문을 수행
    -> 방문 기준이 문제에서 주어지는 경우, X
 3) 더 이상 2번의 과정을 수행할 수 없을 때까지 반복

2. BFS(Breadth-First Search)
 - 너비 우선 탐색 -> 그래프에서 가까운 노드부터 우선적으로 탐색하는 알고리즘
(1) BFS: 큐 자료구조 이용
 1) 탐색 시작 노드를 큐에 삽입하고 방문 처리
 2) 큐에서 노드를 꺼낸 뒤에 해당 노드의 인접 노드 중에서 방문하지 않은 노드를 모두 큐에 삽입하고 방문 처리
 3) 더 이상 2번의 과정을 수행할 수 없을 때까지 반복