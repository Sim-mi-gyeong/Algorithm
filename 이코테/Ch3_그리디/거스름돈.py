n = 1260

# 큰 단위의 화폐부터 차례대로 확인하기
coin = [500, 100, 50, 10]
ans_list = []
cnt = 0

for i in coin:
    cnt += n // i   # 해당 화폐로 거슬러 줄 수 있는 동전의 개수 세기
    ans_list.append(n // i)
    n %= i

print("거슬러 줄 수 있는 최소의 동전 개수 : ", cnt)
print("거슬러 줄 때 각 동전 개수 : ", ans_list)   # 거슬러 줄 때 각 동전 개수

# 정당성 분석
# 가지고 있는 동전 중, '큰 단위가 항상 작은 단위의 배구이므로 작은 단위의 동전들을 종합해 다른 해가 나올 수 없기 때문'
# cf) 800원을 거슬러 주어야 할 때, 화폐 단위가 500원, 400원, 100원

# 시간 복잡도 분석
# 화폐의 종류가 K 라고 할 때 시간 복잡도 = O(K)
# 화폐의 종류만큼만 반복을 수행하면 됨.
# -> 이 알고리즘의 시간 복잡도는 거슬러줘야 하는 금액과 무관, 동전의 총 종류에만 영향을 받음